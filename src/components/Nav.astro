---
import Logo from "./Logo.astro";
import { Icon } from "astro-icon/components";

const links = [
  { href: "#what-we-will-offer", text: "Oferta" },
  { href: "#how-it-will-work", text: "Cómo funciona" },
  { href: "#products", text: "Productos" },
];
---

<header 
  id="main-header" 
  class="fixed top-0 left-0 w-full z-50 transition-all duration-300"
  x-data="{ isOpen: false }"
  @keydown.escape="isOpen = false"
>
  <!-- Mobile backdrop -->
  <div 
    class="fixed inset-0 bg-black/50 backdrop-blur-sm z-40 md:hidden transition-opacity duration-300"
    :class="{ 'opacity-0 invisible': !isOpen, 'opacity-100 visible': isOpen }"
    @click="isOpen = false"
  ></div>

  <div class="container flex items-center justify-between h-20 relative z-50">
    <a 
      href="/" 
      class="hover:opacity-80 transition-opacity focus:outline-none focus-visible:ring-2 focus-visible:ring-plum-soft focus-visible:ring-offset-2 rounded-md p-1"
      @click="isOpen = false"
    >
      <Logo class="h-8" />
      <span class="sr-only">Inicio</span>
    </a>
    
    <!-- Mobile menu button -->
    <button
      @click="isOpen = !isOpen"
      class="md:hidden p-2 -mr-2 text-carbon/80 hover:text-plum-soft transition-colors focus:outline-none focus-visible:ring-2 focus-visible:ring-plum-soft rounded-md"
      :aria-expanded="isOpen"
      aria-label="Menú de navegación"
    >
      <Icon 
        name="mobile-nav" 
        class="w-6 h-6 transition-transform duration-300"
        :class="{'rotate-90': isOpen}"
      />
    </button>

    <!-- Desktop Navigation -->
    <nav 
      class="hidden md:flex items-center gap-6 lg:gap-8"
      aria-label="Navegación principal"
    >
      {links.map((link) => (
        <a 
          href={link.href} 
          class="relative font-medium text-carbon/80 hover:text-sakura-medium transition-colors group"
          :class="{ 'text-sakura-medium': isActiveLink(link.href) }"
          @click="handleNavClick($event, '#{link.href}')"
        >
          <span class="relative">
            {link.text}
            <span 
              class="absolute left-0 -bottom-1 w-0 h-0.5 bg-gradient-to-r from-sakura-light to-sakura-medium transition-all duration-300 group-hover:w-full"
              :class="{ 'w-full': isActiveLink(link.href) }"
            ></span>
          </span>
        </a>
      ))}
    </nav>

    <!-- Mobile Navigation -->
    <nav 
      class="md:hidden fixed top-20 right-0 w-64 h-[calc(100vh-5rem)] bg-ivory/95 backdrop-blur-lg transform transition-transform duration-300 ease-in-out z-40 overflow-y-auto"
      :class="{ 'translate-x-0': isOpen, 'translate-x-full': !isOpen }"
      x-cloak
      @click.away="isOpen = false"
      aria-label="Menú de navegación móvil"
    >
      <div class="flex flex-col p-4 space-y-2">
        {links.map((link) => (
          <a 
            href={link.href}
            class="block px-4 py-3 text-lg font-medium text-carbon/90 hover:bg-plum-soft/10 hover:text-plum-soft rounded-lg transition-colors"
            :class="{ 'text-plum-soft bg-plum-soft/5': isActiveLink(link.href) }"
            @click="isOpen = false"
          >
            {link.text}
          </a>
        ))}
      </div>
    </nav>
  </div>

  <script is:inline>
    // Check if current URL matches the link
    function isActiveLink(href) {
      if (typeof window === 'undefined') return false;
      const currentPath = window.location.pathname + window.location.hash;
      return currentPath === href || (href !== '#' && currentPath.endsWith(href));
    }

    // Handle nav link clicks with smooth scroll
    function handleNavClick(event, targetId) {
      if (window.innerWidth >= 768) { // Only for desktop
        event.preventDefault();
        const target = document.querySelector(targetId);
        if (target) {
          const headerOffset = 80; // Height of header
          const elementPosition = target.getBoundingClientRect().top;
          const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

          window.scrollTo({
            top: offsetPosition,
            behavior: 'smooth'
          });

          // Update URL without jumping
          if (history.pushState) {
            history.pushState(null, null, targetId);
          } else {
            location.hash = targetId;
          }
        }
      }
    }

    // Handle scroll to update active link
    document.addEventListener('DOMContentLoaded', () => {
      const header = document.getElementById('main-header');
      
      function handleScroll() {
        // Update header background on scroll
        if (window.scrollY > 20) {
          header?.classList.add('bg-ivory/90', 'backdrop-blur-md', 'shadow-md');
        } else {
          header?.classList.remove('bg-ivory/90', 'backdrop-blur-md', 'shadow-md');
        }
      }

      // Initial check
      handleScroll();
      
      // Throttle scroll events for better performance
      let isScrolling;
      window.addEventListener('scroll', () => {
        window.clearTimeout(isScrolling);
        isScrolling = setTimeout(handleScroll, 50);
      }, { passive: true });
    });
  </script>

  <style>
    /* Hide elements with x-cloak while Alpine.js is loading */
    [x-cloak] { display: none !important; }
    
    /* Smooth scroll behavior */
    html {
      scroll-behavior: smooth;
    }
    
    /* Focus styles for keyboard navigation */
    *:focus-visible {
      outline: none;
      box-shadow: 0 0 0 3px theme('colors.plum-soft/50');
      border-radius: 0.25rem;
    }
    
    /* Prevents layout shift when scrollbar appears/disappears */
    @media (min-width: 768px) {
      html {
        margin-left: calc(100vw - 100%);
        margin-right: 0;
      }
    }
  </style>
</header>
