---
interface Props {
  class?: string;
}
const { class: className } = Astro.props;
---
<svg class={className} viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <filter id="shadow-cheesecake" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="1" dy="2" stdDeviation="1.5" flood-color="#F7C5CC" flood-opacity="0.7"/>
    </filter>
    <linearGradient id="cheesecake-top" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#FFF9C4" />
      <stop offset="100%" stop-color="#FFF59D" />
    </linearGradient>
    <linearGradient id="cheesecake-bottom" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#D7CCC8" />
      <stop offset="100%" stop-color="#BCAAA4" />
    </linearGradient>
  </defs>
  <g filter="url(#shadow-cheesecake)">
    <!-- Cake base -->
    <rect x="12" y="30" width="40" height="20" rx="4" fill="url(#cheesecake-bottom)" stroke="#fff" stroke-width="2"/>
    
    <!-- Cake top -->
    <path d="M 12 30 Q 32 20 52 30 L 52 36 Q 32 26 12 36 Z" fill="url(#cheesecake-top)" stroke="#fff" stroke-width="2"/>
    
    <!-- Decorative elements -->
    <g class="animate-float" style="animation-duration: 5s">
      <circle cx="15" cy="15" r="2" fill="#F8BBD0" opacity="0.8">
        <animate attributeName="r" values="2;2.5;2" dur="4s" repeatCount="indefinite"/>
      </circle>
      <circle cx="49" cy="12" r="1.5" fill="#F8BBD0" opacity="0.8">
        <animate attributeName="r" values="1.5;2;1.5" dur="4.5s" repeatCount="indefinite"/>
      </circle>
    </g>
  </g>
</svg>

<style>
  .animate-float {
    animation: float 4s ease-in-out infinite;
  }
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
  }
</style>
