---
interface Props {
  class?: string;
}
const { class: className } = Astro.props;
---
<svg class={className} viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <filter id="shadow-mochi" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="1" dy="2" stdDeviation="1.5" flood-color="#F7C5CC" flood-opacity="0.7"/>
    </filter>
    <radialGradient id="mochi-gradient" cx="50%" cy="50%" r="50%" fx="30%" fy="30%">
      <stop offset="0%" stop-color="#F7C5CC" />
      <stop offset="100%" stop-color="#F8BBD0" />
    </radialGradient>
  </defs>
  <g filter="url(#shadow-mochi)">
    <!-- Mochi base -->
    <circle cx="32" cy="32" r="20" fill="url(#mochi-gradient)" stroke="#fff" stroke-width="3"/>
    
    <!-- Decorative elements -->
    <g class="animate-float" style="animation-duration: 5s">
      <circle cx="20" cy="20" r="2" fill="#F8BBD0" opacity="0.8">
        <animate attributeName="r" values="2;2.5;2" dur="3s" repeatCount="indefinite"/>
      </circle>
      <circle cx="44" cy="18" r="1.5" fill="#F8BBD0" opacity="0.8">
        <animate attributeName="r" values="1.5;2;1.5" dur="3.5s" repeatCount="indefinite"/>
      </circle>
    </g>
  </g>
</svg>

<style>
  .animate-float {
    animation: float 4s ease-in-out infinite;
  }
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
  }
</style>
