---
interface Props {
  class?: string;
}
const { class: className } = Astro.props;
---
<svg class={className} viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <filter id="shadow-rotate" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="1" dy="2" stdDeviation="1.5" flood-color="#F7C5CC" flood-opacity="0.7"/>
    </filter>
    <linearGradient id="arrow-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#F7C5CC" />
      <stop offset="100%" stop-color="#F8BBD0" />
    </linearGradient>
  </defs>
  <g filter="url(#shadow-rotate)">
    <!-- Simple circular arrow -->
    <g class="rotate">
      <circle cx="32" cy="32" r="20" fill="none" stroke="#F7C5CC" stroke-width="3" stroke-dasharray="1, 8"/>
      <path d="M 40 20 L 48 20 L 40 12 Z" fill="#F7C5CC"/>
    </g>
    
    <!-- Center dot -->
    <circle cx="32" cy="32" r="4" fill="#F7C5CC"/>
  </g>
  
  <!-- Decorative elements -->
  <g class="animate-float" style="animation-duration: 5s">
    <circle cx="15" cy="15" r="1" fill="#F8BBD0" opacity="0.8">
      <animate attributeName="r" values="1;1.3;1" dur="4s" repeatCount="indefinite"/>
    </circle>
    <circle cx="50" cy="50" r="0.8" fill="#F8BBD0" opacity="0.8">
      <animate attributeName="r" values="0.8;1.1;0.8" dur="3.5s" repeatCount="indefinite" begin="0.3s"/>
    </circle>
  </g>
</svg>

<style>
  .rotate {
    transform-origin: 32px 32px;
    animation: rotate 8s linear infinite;
  }
  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
  .animate-float {
    animation: float 5s ease-in-out infinite;
  }
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-3px); }
  }
</style>
