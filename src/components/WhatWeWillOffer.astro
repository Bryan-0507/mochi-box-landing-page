---
import IllustrationClock from '../illustrations/IllustrationClock.astro';
import IllustrationRotate from '../illustrations/IllustrationRotate.astro';
import IllustrationDessert from '../illustrations/IllustrationDessert.astro';
import IllustrationPayment from '../illustrations/IllustrationPayment.astro';
import IllustrationGift from '../illustrations/IllustrationGift.astro';

interface FeatureItem {
  component: any; 
  title: string;
  description: string;
}

const features: FeatureItem[] = [
  {
    component: IllustrationClock,
    title: "Disponibilidad 24/7",
    description: "Máquinas expendedoras disponibles en cualquier momento del día, todos los días del año."
  },
  {
    component: IllustrationRotate,
    title: "Variedad rotativa",
    description: "Nuestro menú cambia regularmente para ofrecerte siempre algo nuevo."
  },
  {
    component: IllustrationDessert,
    title: "Postres y bebidas",
    description: "Delicias japonesas auténticas preparadas con ingredientes frescos."
  },
  {
    component: IllustrationPayment,
    title: "Pagos digitales",
    description: "Paga de forma rápida y segura con tu método preferido."
  },
  {
    component: IllustrationGift,
    title: "Presentación premium",
    description: "Cada producto está cuidadosamente empaquetado para mantener su frescura."
  }
];
---

<section id="what-we-will-offer" class="py-20 md:py-28 bg-gradient-to-b from-plum-soft/5 to-white">
  <div class="container px-4 mx-auto">
    <div class="max-w-3xl mx-auto text-center mb-16">
      <h2 class="font-display text-3xl md:text-4xl font-bold text-plum-soft mb-4">
        ¿Qué ofreceremos?
      </h2>
      <p class="text-lg text-carbon/80">
        Una experiencia única de postres y bebidas japonesas, disponible cuando tú lo desees.
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-8 max-w-6xl mx-auto">
      {features.map((feature, index) => {
        const Icon = feature.component;
        const baseCard = "h-full bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 border border-plum-soft/10 hover:border-plum-soft/30";
        const cardClasses = `${baseCard} ${index < 3 ? 'lg:col-span-2' : index === 3 ? 'lg:col-span-2 lg:col-start-2' : 'lg:col-span-2 lg:col-start-4'}`;
        return (
          <div 
            class={cardClasses}
            data-aos="fade-up"
            data-aos-delay={index * 100}
          >
            <div class="w-20 h-20 mx-auto mb-6 flex items-center justify-center text-plum-soft">
              {Icon === IllustrationClock && <IllustrationClock class="w-full h-full" aria-hidden="true" />}
              {Icon === IllustrationRotate && <IllustrationRotate class="w-full h-full" aria-hidden="true" />}
              {Icon === IllustrationDessert && <IllustrationDessert class="w-full h-full" aria-hidden="true" />}
              {Icon === IllustrationPayment && <IllustrationPayment class="w-full h-full" aria-hidden="true" />}
              {Icon === IllustrationGift && <IllustrationGift class="w-full h-full" aria-hidden="true" />}
            </div>
            <h3 class="text-xl font-bold text-plum-soft mb-3">
              {feature.title}
            </h3>
            <p class="text-carbon/80">
              {feature.description}
            </p>
          </div>
        );
      })}
      
    </div>
  </div>
</section>

<style>
  /* Smooth animations */
  [data-aos] {
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  
  [data-aos="fade-up"] {
    transform: translateY(20px);
  }
  
  [data-aos].aos-animate {
    transform: translateY(0);
  }
  
  /* Ensure consistent height for all cards */
  @media (min-width: 768px) {
    .grid > div {
      height: 100%;
    }
  }
</style>
